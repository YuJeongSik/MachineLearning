{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"머신러닝 7차과제","provenance":[],"collapsed_sections":["lobHDtam65u0"],"authorship_tag":"ABX9TyNDJA5Ge0WL/ygswFXE1+5s"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"lobHDtam65u0"},"source":["###문제1) 7장의 엑스트라 트리 직접 구현. 결정트리는 사이킷런 모델 활용 가능"]},{"cell_type":"code","metadata":{"id":"Lz_81nGo6EmN","executionInfo":{"status":"ok","timestamp":1623585089125,"user_tz":-540,"elapsed":1299,"user":{"displayName":"유정식","photoUrl":"","userId":"13391733907528682049"}}},"source":["# 파이썬 ≥3.5 필수 (파이썬 3.7 추천)\n","import sys\n","assert sys.version_info >= (3, 5) \n","\n","# 사이킷런 ≥0.20 필수\n","import sklearn\n","assert sklearn.__version__ >= \"0.20\"\n","\n","# 공통 모듈 임포트\n","import numpy as np\n","import os\n","\n","# 노트북 실행 결과를 동일하게 유지하기 위해\n","np.random.seed(42)\n","\n","# 의사결정트리분류기 import\n","from sklearn.tree import DecisionTreeClassifier"],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"uwPQCq3w7wCk"},"source":["훈련데이터인 moons 데이터셋을 import하고 훈련세트와 테스트세트로 나눕니다."]},{"cell_type":"code","metadata":{"id":"LKbko1BU7uS8","executionInfo":{"status":"ok","timestamp":1623585089126,"user_tz":-540,"elapsed":4,"user":{"displayName":"유정식","photoUrl":"","userId":"13391733907528682049"}}},"source":["from sklearn.model_selection import train_test_split\n","from sklearn.datasets import make_moons\n","\n","X, y = make_moons(n_samples=500, noise=0.30, random_state=42)\n","X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)"],"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DOEUhDv0Et3N"},"source":["먼저 랜덤포레스트를 구현해봅니다. 아래는 BaggingClassifier를 이용해 랜덤포레스트와 비슷한 성능을 내는 분류기를 구현한겁니다. 이때 splitter를 best로 설정해 최상의 분할을 선택합니다."]},{"cell_type":"code","metadata":{"id":"c2ynuiZg8SoV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1623585225487,"user_tz":-540,"elapsed":1095,"user":{"displayName":"유정식","photoUrl":"","userId":"13391733907528682049"}},"outputId":"93603872-4a90-496d-a58e-2fe5495428c3"},"source":["from sklearn.ensemble import BaggingClassifier\n","\n","bag_clf = BaggingClassifier(\n","    DecisionTreeClassifier(splitter=\"best\", max_leaf_nodes=16, random_state=42),\n","    n_estimators=500, max_samples=1.0, bootstrap=True, random_state=42)\n","\n","bag_clf.fit(X_train, y_train)\n","bag_clf.score(X_test,y_test)"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.912"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"markdown","metadata":{"id":"9HO9e7CuPSCL"},"source":["아래는 RandomForestClassifer를 이용해 성능을 평가합니다."]},{"cell_type":"code","metadata":{"id":"Zao9LbPS6-bK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1623585174686,"user_tz":-540,"elapsed":1055,"user":{"displayName":"유정식","photoUrl":"","userId":"13391733907528682049"}},"outputId":"af1dfabd-0e5d-44b0-9cfd-9a3cf303a421"},"source":["from sklearn.ensemble import RandomForestClassifier\n","\n","rnd_clf = RandomForestClassifier(n_estimators=500, max_leaf_nodes=16, random_state=42)\n","rnd_clf.fit(X_train, y_train)\n","\n","rnd_clf.score(X_test,y_test)"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.912"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"GVayHEXlP1LA"},"source":["성능 평가결과 BaggingClassifier와 RandomForestClassifer 둘다 동일한 성능을 냈습니다.\n","\n","이제 ExtratreeClassifier를 구현해봅니다. 아래는 BaggingClassifier를 이용해 비슷하게 구현한 겁니다. 이때 splitter를 random으로 설정해 분할을 임의로 합니다."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nKUt2QSCOdEZ","executionInfo":{"status":"ok","timestamp":1623585340057,"user_tz":-540,"elapsed":1125,"user":{"displayName":"유정식","photoUrl":"","userId":"13391733907528682049"}},"outputId":"e7d10076-9c8e-4ef3-cf1c-4990f1d9dced"},"source":["bag_clf = BaggingClassifier(\n","    DecisionTreeClassifier(splitter=\"random\", max_leaf_nodes=16, random_state=42),\n","    n_estimators=500, max_samples=1.0, bootstrap=True, random_state=42)\n","\n","bag_clf.fit(X_train, y_train)\n","bag_clf.score(X_test,y_test)"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.92"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"markdown","metadata":{"id":"TZXPfXHsRZJP"},"source":["이제 ExtraTreeClassifier를 이용해 성능을 평가해봅니다."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H70RsvZCLEyE","executionInfo":{"status":"ok","timestamp":1623584562792,"user_tz":-540,"elapsed":514,"user":{"displayName":"유정식","photoUrl":"","userId":"13391733907528682049"}},"outputId":"ec3ae70d-e126-42cc-aeb7-8740a5511204"},"source":["from sklearn.tree import ExtraTreeClassifier\n","\n","extra_tree = ExtraTreeClassifier(random_state=42)\n","cls = BaggingClassifier(extra_tree, random_state=42).fit(X_train, y_train)\n","cls.score(X_test,y_test)"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.872"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"_K8xTuQ4Rh2J"},"source":["성능을 평가해본결과 두개의 성능이 다르게 나타났습니다. 이는 ExtratreeClassifier의 무작위적인 특성때문에 결과가 이렇게 나타난것 같습니다."]},{"cell_type":"markdown","metadata":{"id":"IvZm6XBWKg7u"},"source":["###문제2) 8장 연습문제 9번과 10번 참조:\n","\n","- MNIST 데이터셋을 훈련 세트와 테스트 세트로 분할\n","\n","- t-SNE, PCA, LLE, MDS 등의 차원축소 알고리즘을 적용하여 2차원 데이터셋으로 변환\n","\n","- 변환된 데이터셋에 대해 SVC, 랜덤포레스트 등의 분류기 학습\n","\n","- 각 분류기의 성능 평가\n","\n","- 추가: 3차원으로 차원축소를 진행한 결과와 비교"]},{"cell_type":"markdown","metadata":{"id":"s4kIO4JxNuJ6"},"source":["이번 문제에서 사용할 데이터인 MNIST를 불러옵니다."]},{"cell_type":"code","metadata":{"id":"FEvQ0EQgKxqF","executionInfo":{"status":"ok","timestamp":1623586522173,"user_tz":-540,"elapsed":27075,"user":{"displayName":"유정식","photoUrl":"","userId":"13391733907528682049"}}},"source":["from sklearn.datasets import fetch_openml\n","\n","mnist = fetch_openml('mnist_784', version=1, as_frame=False)"],"execution_count":9,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-vWYvgBIN0oY"},"source":["불러온 MNIST 데이터셋을 훈련 세트와 테스트 세트로 분할합니다. 60000개 모두 사용할시 시간이 매우 오래 걸리므로 이중 10000개를 랜덤으로 뽑아서 하겠습니다."]},{"cell_type":"code","metadata":{"id":"ZFegQLAOf2_Z","executionInfo":{"status":"ok","timestamp":1623586522174,"user_tz":-540,"elapsed":8,"user":{"displayName":"유정식","photoUrl":"","userId":"13391733907528682049"}}},"source":["m = 10000\n","idx = np.random.permutation(60000)[:m]\n","\n","X = mnist['data'][idx]\n","y = mnist['target'][idx]\n","\n","X_train = X[:8000]\n","y_train = y[:8000]\n","\n","X_test = X[8000:]\n","y_test = y[8000:]"],"execution_count":10,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"69KB9yYKN7Kx"},"source":["이제 PCA를 이용해서 2차원으로 축소시킵니다."]},{"cell_type":"code","metadata":{"id":"12smBmL2NRhs"},"source":["from sklearn.decomposition import PCA\n","\n","pca = PCA(n_components=2, random_state=42)\n","X_train_PCAreduced = pca.fit_transform(X_train)\n","X_test_PCAreduced = pca.fit_transform(X_test) # 테스트 세트 또한 꼭!!! 2차원으로 압축시키기. 안하면 뒤에서 에러남"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"RWkRGn7bPJx4"},"source":["t-SNE를 이용해서 2차원으로 축소시킵니다."]},{"cell_type":"code","metadata":{"id":"QrhzP26rPQXG"},"source":["from sklearn.manifold import TSNE\n","\n","tsne = TSNE(n_components=2, random_state=42)\n","X_train_TSNEreduced = tsne.fit_transform(X_train)\n","X_test_TSNEreduced = tsne.fit_transform(X_test)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"svLVHqTIP_KX"},"source":["LLE(지역 선형 임베딩)를 이용해서 2차원으로 축소시킵니다."]},{"cell_type":"code","metadata":{"id":"qbTPGXgdQIsZ"},"source":["from sklearn.manifold import LocallyLinearEmbedding\n","\n","lle = LocallyLinearEmbedding(n_components=2, random_state=42)\n","X_train_LLEreduced = lle.fit_transform(X_train)\n","X_test_LLEreduced = lle.fit_transform(X_test)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"eT3GvMwuQ88Q"},"source":["MDS를 이용해 서 2차원으로 축소시킵니다."]},{"cell_type":"code","metadata":{"id":"l89cm6vtRD_x"},"source":["#학습에 시간이 너무 오래걸려 주석처리하게 되었습니다\n","\n","#from sklearn.manifold import MDS\n","\n","#mds = MDS(n_components=2, random_state=42)\n","#X_train_MDSreduced = mds.fit_transform(X_train)\n","#X_test_MDSreduced = mds.fit_transform(X_test)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DnhULZSFRt07"},"source":["이제 위에서 축소시킨 것들을 랜덤포레스트로 학습합니다\n"]},{"cell_type":"code","metadata":{"id":"Bwp6JNzAR_YR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1623547376794,"user_tz":-540,"elapsed":3528,"user":{"displayName":"유정식","photoUrl":"","userId":"13391733907528682049"}},"outputId":"993beabd-ba71-4606-f74e-bce11534dece"},"source":["rnd_PCA = RandomForestClassifier(n_estimators=100, random_state=42)\n","rnd_PCA.fit(X_train_PCAreduced, y_train)\n","\n","rnd_TSNE = RandomForestClassifier(n_estimators=100, random_state=42)\n","rnd_TSNE.fit(X_train_TSNEreduced, y_train)\n","\n","rnd_LLE = RandomForestClassifier(n_estimators=100, random_state=42)\n","rnd_LLE.fit(X_train_LLEreduced, y_train)\n","\n","#rnd_MDS = RandomForestClassifier(n_estimators=100, random_state=42)\n","#rnd_MDS.fit(X_train_MDSreduced, y_train)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,\n","                       criterion='gini', max_depth=None, max_features='auto',\n","                       max_leaf_nodes=None, max_samples=None,\n","                       min_impurity_decrease=0.0, min_impurity_split=None,\n","                       min_samples_leaf=1, min_samples_split=2,\n","                       min_weight_fraction_leaf=0.0, n_estimators=100,\n","                       n_jobs=None, oob_score=False, random_state=42, verbose=0,\n","                       warm_start=False)"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"markdown","metadata":{"id":"wZx_8IqYeC4W"},"source":["이제 정확도를 확인해봅시다"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Nrp4AQEBsGif","executionInfo":{"status":"ok","timestamp":1623547376794,"user_tz":-540,"elapsed":7,"user":{"displayName":"유정식","photoUrl":"","userId":"13391733907528682049"}},"outputId":"ebd29435-b400-4e24-86ca-b1a68e4a3eb4"},"source":["from sklearn.metrics import accuracy_score\n","\n","y_pred = rnd_PCA.predict(X_test_PCAreduced)\n","accuracy_score(y_test, y_pred)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.1245"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"64YH9FI14jgc","executionInfo":{"status":"ok","timestamp":1623547376794,"user_tz":-540,"elapsed":5,"user":{"displayName":"유정식","photoUrl":"","userId":"13391733907528682049"}},"outputId":"9b9c3293-73c9-4d76-ada0-bb2a3e1330bf"},"source":["y_pred = rnd_TSNE.predict(X_test_TSNEreduced)\n","accuracy_score(y_test, y_pred)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.133"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q6XaSKep4lnD","executionInfo":{"status":"ok","timestamp":1623547376795,"user_tz":-540,"elapsed":5,"user":{"displayName":"유정식","photoUrl":"","userId":"13391733907528682049"}},"outputId":"87045740-be15-469f-d9f2-029f18f2b109"},"source":["y_pred = rnd_LLE.predict(X_test_LLEreduced)\n","accuracy_score(y_test, y_pred)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.2735"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"CGOxdN8q4u8X"},"source":["#y_pred = rnd_MDS.predict(X_test_MDSreduced)\n","#accuracy_score(y_test, y_pred)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"AA9qOfO4Sxhe"},"source":["2차원으로 축소했을때 정확도가 많이 떨어진것을 알 수 있습니다. 이는 784차원인 mnist데이터를 2차원으로 축소하면서 많은 데이터 손실이 일어났기에 발생한 현상으로 생각됩니다.\n","\n","그리고 3개의 분류기중 LLE가 그나마 높은 성능을 보여주고 있습니다. 다만 학습에 걸리는 시간은 가장 낮은 성능을 보여주는 PCA가 가장 빨랐습니다."]},{"cell_type":"markdown","metadata":{"id":"SlpHbQCZBiYs"},"source":["이제 3차원으로 축소시켜봅시다"]},{"cell_type":"code","metadata":{"id":"SvbPv8GWBl_i"},"source":["from sklearn.decomposition import PCA\n","\n","pca = PCA(n_components=3, random_state=42)\n","X_train_PCAreduced = pca.fit_transform(X_train)\n","X_test_PCAreduced = pca.fit_transform(X_test) # 테스트 세트 또한 꼭!!! 2차원으로 압축시키기. 안하면 뒤에서 에러남"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"S3lpm97qBtOe"},"source":["from sklearn.manifold import TSNE\n","\n","tsne = TSNE(n_components=3, random_state=42)\n","X_train_TSNEreduced = tsne.fit_transform(X_train)\n","X_test_TSNEreduced = tsne.fit_transform(X_test)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"culsllfCBvIb"},"source":["from sklearn.manifold import LocallyLinearEmbedding\n","\n","lle = LocallyLinearEmbedding(n_components=3, random_state=42)\n","X_train_LLEreduced = lle.fit_transform(X_train)\n","X_test_LLEreduced = lle.fit_transform(X_test)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"uXh1OizCSBbW"},"source":["3차원으로 축소시킨뒤 RandomForest를 이용해서 학습시킵니다"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G3e89fNwBy-L","executionInfo":{"status":"ok","timestamp":1623549143087,"user_tz":-540,"elapsed":3441,"user":{"displayName":"유정식","photoUrl":"","userId":"13391733907528682049"}},"outputId":"06958aa0-99cf-4cdf-c338-4c565b040ba0"},"source":["rnd_PCA = RandomForestClassifier(n_estimators=100, random_state=42)\n","rnd_PCA.fit(X_train_PCAreduced, y_train)\n","\n","rnd_TSNE = RandomForestClassifier(n_estimators=100, random_state=42)\n","rnd_TSNE.fit(X_train_TSNEreduced, y_train)\n","\n","rnd_LLE = RandomForestClassifier(n_estimators=100, random_state=42)\n","rnd_LLE.fit(X_train_LLEreduced, y_train)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,\n","                       criterion='gini', max_depth=None, max_features='auto',\n","                       max_leaf_nodes=None, max_samples=None,\n","                       min_impurity_decrease=0.0, min_impurity_split=None,\n","                       min_samples_leaf=1, min_samples_split=2,\n","                       min_weight_fraction_leaf=0.0, n_estimators=100,\n","                       n_jobs=None, oob_score=False, random_state=42, verbose=0,\n","                       warm_start=False)"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"markdown","metadata":{"id":"mfuUTzd9SM9O"},"source":["학습을 끝낸뒤 테스트세트로 성능을 평가해봅니다."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pbQFnDBXB1TQ","executionInfo":{"status":"ok","timestamp":1623549143088,"user_tz":-540,"elapsed":8,"user":{"displayName":"유정식","photoUrl":"","userId":"13391733907528682049"}},"outputId":"4fafa0ad-7221-4222-8955-b2b1a779fb20"},"source":["y_pred = rnd_PCA.predict(X_test_PCAreduced)\n","accuracy_score(y_test, y_pred)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.0925"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h6b-a7X5B2cM","executionInfo":{"status":"ok","timestamp":1623549143088,"user_tz":-540,"elapsed":5,"user":{"displayName":"유정식","photoUrl":"","userId":"13391733907528682049"}},"outputId":"c938bf1b-4c20-42a0-904e-586938cd1561"},"source":["y_pred = rnd_TSNE.predict(X_test_TSNEreduced)\n","accuracy_score(y_test, y_pred)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.121"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CqnZ2jBMB4EM","executionInfo":{"status":"ok","timestamp":1623549143088,"user_tz":-540,"elapsed":4,"user":{"displayName":"유정식","photoUrl":"","userId":"13391733907528682049"}},"outputId":"2d2919cb-06e6-4d42-c4f5-28e647250f39"},"source":["y_pred = rnd_LLE.predict(X_test_LLEreduced)\n","accuracy_score(y_test, y_pred)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.2315"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"markdown","metadata":{"id":"ULU0aD3OSRjl"},"source":["성능 평가결과 2차원으로 압축했을때보다 성능이 떨어진것을 확인할 수 있었습니다."]}]}